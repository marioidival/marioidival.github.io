<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Mario Idival on Blog</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2015-02-22T12:15:00-03:00</updated><entry><title>Github Star</title><link href="/github-star.html" rel="alternate"></link><updated>2015-02-22T12:15:00-03:00</updated><author><name>Mário Idival</name></author><id>tag:,2015-02-22:github-star.html</id><summary type="html">&lt;h1&gt;Mendigando Star no Github&lt;/h1&gt;
&lt;p&gt;Pode parecer que estou pedindo &lt;code&gt;star&lt;/code&gt; em meus projetos no Github, mas é em prol da comunidade OSI. Deveríamos dar mais &lt;code&gt;Star&lt;/code&gt; em outros projetos&lt;/p&gt;
&lt;h1&gt;* &lt;em&gt; * &lt;/em&gt; *&lt;/h1&gt;
&lt;p&gt;Você sabe o que seus &lt;code&gt;stars&lt;/code&gt; pode fazer? Observe:&lt;/p&gt;
&lt;p&gt;Pessoas que de fato, gostam de contribuir e interagir no mundo Open Source pelo Github, visitam uma pagina especifica nele, a &lt;a href="https://github.com/explore"&gt;Explore&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Inicialmente, o Github categoriza alguns projetos com maior visibilidade (stars/forks) dessa forma:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Explore Github" src="https://www.dropbox.com/s/u482jy1xne6sp4v/Captura%20de%20tela%202015-02-22%2012.38.20.png?raw=true" title="Explore" /&gt;&lt;/p&gt;
&lt;p&gt;Logo depois, os &lt;code&gt;Trending repositories&lt;/code&gt; que pode ser filtrados em &lt;code&gt;Today&lt;/code&gt;, &lt;code&gt;Week&lt;/code&gt; e &lt;code&gt;Month&lt;/code&gt;. Nesse tópico ficam os projetos que conseguiram mais &lt;code&gt;stars&lt;/code&gt; e &lt;code&gt;forks&lt;/code&gt; no seu respectivo filtro &lt;em&gt;(ainda não é tão legal)&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Trending Repositories" src="https://www.dropbox.com/s/k0eo5bp6zypwt3j/Captura%20de%20tela%202015-02-22%2012.42.28.png?raw=true" title="Trending Repositories" /&gt;&lt;/p&gt;
&lt;h3&gt;O legal&lt;/h3&gt;
&lt;p&gt;Após os &lt;code&gt;Trending Repositories&lt;/code&gt; vem a parte legal do Explore, os projetos que as pessoas que você segue deram &lt;code&gt;Star&lt;/code&gt; aparecem ali.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Trending Follow Repositories" src="https://www.dropbox.com/s/1rwzrtrg36xxufb/Captura%20de%20tela%202015-02-22%2012.49.31.png?raw=true" title="Starred by people you follow" /&gt;&lt;/p&gt;
&lt;p&gt;O provável motivo de você seguir algumas pessoas no Github, é que você espera que elas possam ajudar você a descobrir coisas novas, que estão fazendo, ou que
elas descobriram. Então quando essa pessoa da um &lt;code&gt;Star&lt;/code&gt; em algum projeto, ela amplia a visão (em projetos) de seus seguidores no Github.&lt;/p&gt;
&lt;p&gt;Então, se você é uma pessoa que tem muitos seguidores no Github, ou até mesmo poucos, adquira essa cultura do &lt;code&gt;Star&lt;/code&gt; de vez!&lt;/p&gt;
&lt;p&gt;Tente aplicar um filtro, não veja apenas o seu - digo, &lt;em&gt;se eu gostei desse projeto, eu dou um &lt;code&gt;Star&lt;/code&gt;, senão, passo...&lt;/em&gt; - veja por um lado que a sua comunidade de alguma forma pode se beneficiar com esse projeto.&lt;/p&gt;
&lt;h3&gt;Observação:&lt;/h3&gt;
&lt;p&gt;Se existe alguma coisa que você pense diferente, cria um comentário para discutimos.&lt;/p&gt;
&lt;p&gt;Esse for o meu quarto post.&lt;/p&gt;</summary><category term="marioidival"></category><category term="github"></category><category term="osi"></category></entry><entry><title>Web Frameworks, Web Frameworks EVERYWHERE!</title><link href="/web-frameworks-everywhere.html" rel="alternate"></link><updated>2014-12-04T23:30:00-02:00</updated><author><name>Mário Idival</name></author><id>tag:,2014-12-04:web-frameworks-everywhere.html</id><summary type="html">&lt;h1&gt;Introdução&lt;/h1&gt;
&lt;p&gt;Nesse exato momento, vários programadores da comunidade Python estão
criando cursos (ou já criaram), para ensinar pela visão deles, sobre alguns frameworks
usados para o desenvolvimento web. &lt;a href="http://djangoproject.com"&gt;Django&lt;/a&gt;, &lt;a href="http://www.web2py.com"&gt;Web2py&lt;/a&gt;, &lt;a href="http://www.pylonsproject.org"&gt;Pyramid&lt;/a&gt;, &lt;a href="http://flask.pocoo.org/"&gt;Flask&lt;/a&gt;,
&lt;a href="http://bottlepy.org"&gt;Bottle&lt;/a&gt; (Não tenho certeza se este tem um curso no Brasil) são os que
estão mais "badalados" na comunidade.&lt;/p&gt;
&lt;h1&gt;Real Objetivo&lt;/h1&gt;
&lt;p&gt;Acredito que sozinho, os programadores poderão aprender cada um desses
frameworks, claro que com alguns existindo mais dificuldade do que
outros, pelo material que é raro de encontrar, cases e exemplos
fictícios.&lt;/p&gt;
&lt;p&gt;Eu acredito que os cursos hoje criados, os tutores, alem de ensinar
básico-avançado da ferramenta, também ilustrar aos alunos que essa sua
ferramenta, tem ou não, real capacidade de ser a "escolha certa" em
relação a um outro, resolvendo aquela velha discussão sobre "Qual é o
melhor framework".&lt;/p&gt;
&lt;p&gt;Pensando de forma rápida, pareceu que o professor deveria saber dos
outros frameworks também, certo? Mas não era a intenção, se ele saber,
ótimo para o aluno, mas se não souber, ele pelo menos deve mostrar os
pontos fortes e fracos da ferramenta.&lt;/p&gt;
&lt;p&gt;Com isso (ao meu entendimento), iria passar automaticamente de "flamewar",
para uma discussão mais técnica, legal de assistir e participar, sem contar
que o aluno/programador vai saber, de fato, fazer suas escolhas.&lt;/p&gt;
&lt;h3&gt;Observação:&lt;/h3&gt;
&lt;p&gt;Se existe alguma coisa que você ache errado ou que faz diferente, cria
um comentário para discutimos.&lt;/p&gt;
&lt;p&gt;Esse foi o meu terceiro post.&lt;/p&gt;</summary><category term="frameworks"></category><category term="django"></category><category term="web2py"></category><category term="flask"></category><category term="bottle"></category><category term="pyramid"></category><category term="gae"></category></entry><entry><title>Como iniciar no Desenvolvimento Web</title><link href="/iniciando-no-desenvolvimento-web.html" rel="alternate"></link><updated>2014-09-28T00:46:00-03:00</updated><author><name>Mário Idival</name></author><id>tag:,2014-09-28:iniciando-no-desenvolvimento-web.html</id><summary type="html">&lt;h1&gt;Introdução&lt;/h1&gt;
&lt;p&gt;A dias já pensava em criar algum post relacionado a este assunto. Vejo
muita gente perguntando, não só na comunidade Python, como iniciar o
desenvolvimento web. E a resposta sempre é a mesma, dependendo da
comunidade:&lt;/p&gt;
&lt;p&gt;Ruby:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Vai&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;Rails&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="err"&gt;É&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;melhor&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Vai&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;Django&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="err"&gt;É&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;melhor&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Javascript:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Vai&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;Express&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="err"&gt;É&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;melhor&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Mas a galera esquece de um detalhe, quem está perguntando provavelmente
nunca desenvolveu para Web, não sabe como funciona o basico de uma requisição http
e indicam um monstro para o(a) coitado(a) começar.&lt;/p&gt;
&lt;h1&gt;Minha experiencia inicial&lt;/h1&gt;
&lt;p&gt;Quando quis iniciar nessa área, eu programava/estudava Ruby e
naturalmente até hoje, se qualquer um perguntar que framework Ruby usar
a resposta será uma, Rails. E comigo não foi diferente.&lt;/p&gt;
&lt;p&gt;Comecei a estudar o Rails e as primeiras informações a respeito foram:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Ruby&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;Rails&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;é&lt;/span&gt; &lt;span class="n"&gt;um&lt;/span&gt; &lt;span class="n"&gt;Web&lt;/span&gt; &lt;span class="n"&gt;framework&lt;/span&gt; &lt;span class="n"&gt;full&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt; &lt;span class="n"&gt;baseado&lt;/span&gt; &lt;span class="n"&gt;em&lt;/span&gt; &lt;span class="n"&gt;MVC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;utiliza&lt;/span&gt; &lt;span class="n"&gt;RESTful&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;facilmente&lt;/span&gt; &lt;span class="n"&gt;pode&lt;/span&gt; &lt;span class="n"&gt;gerar&lt;/span&gt; &lt;span class="n"&gt;um&lt;/span&gt; &lt;span class="n"&gt;CRUD&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;O Rails faz muito mais do que isso&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;WTF &lt;strong&gt;FULL-STACK&lt;/strong&gt;? WTF &lt;strong&gt;MVC&lt;/strong&gt;? WTF &lt;strong&gt;RESTFul&lt;/strong&gt;? WTF &lt;strong&gt;CRUD&lt;/strong&gt;?&lt;/p&gt;
&lt;p&gt;Para a galera que já conhece, isso já está no sangue (&lt;em&gt;ou deveria&lt;/em&gt;),
são ideias simples. Mas para iniciantes, isso são coisas de outro mundo,
além de um novo mundo que eles estão querendo entrar, que é o do Desenvolvimento Web.&lt;/p&gt;
&lt;p&gt;Eu estranhei tudo isso, sempre quando eu tentava fazer algo com o
scaffold e dava errado, achava que era alguma coisa relacionada a MVC ou
outro daqueles itens que eu não sabia para que servia.&lt;/p&gt;
&lt;p&gt;E eu na idéia da galera que me indicou este framework, achava que ia
conseguir fazer coisas bem rapidamente, que poderia usar o form do html para
passar algumas coisas para o servidor, como um cadastro na minha app de agenda
telefônica.&lt;/p&gt;
&lt;p&gt;E foi difícil. Tinha pouca idéia de relacionamento com tabelas e já
aparecia um Model. Tinha que mostrar alguns itens na minha pagina
inicial mas também não sabia como o Controller funcionava e como
pegava esses itens e muito menos em qual View eu deveria colocar.&lt;/p&gt;
&lt;p&gt;Sem contar a principal duvida. Como que a pagina Web sabe qual
controller(ou view) é o correto? Quem inicia o desenvolvimento web,
não sabe o que é um Request, Response, como funciona a Rota (Routes),
o que está acontecendo realmente para que a minha pagina apareça.&lt;/p&gt;
&lt;h1&gt;Minha maneira correta&lt;/h1&gt;
&lt;p&gt;Depois de apanhar varias e varias vezes, passar por 2 processos de
comunicação [SERVER -&amp;gt; APP (WSGI-Python, Rack-Ruby)], procurar por MVC,
por REST, CRUD, Banco de Dados, Templates, Settings e etc.
Creio que a melhor forma de introduzir um iniciante ao mundo do
desenvolvimento web, é usando um miniframework.&lt;/p&gt;
&lt;p&gt;Python e Ruby tem famosos miniframeworks.
&lt;a href="http://www.sinatrarb.com/"&gt;Sinatra&lt;/a&gt; na comunidade Ruby e
&lt;a href="http://flask.pocoo.org/"&gt;Flask&lt;/a&gt; na comunidade Python. Ambos são ótimos
para ensinar. O funcionamento da rota é simples de explicar, assim como
as views/controllers que nesses frameworks são apenas fáceis métodos,
que o iniciante vai saber identificar ali com um minimo esforço o que
está acontecendo. Não tem um padrão como o MVC a seguir (uma pilha de
metodos vai fazer o que ele quer). Não precisa configurar nada em nenhum
arquivo adicional (como settings ou configs). Para a simples aplicação
que ele quer fazer para estudo, vai ser de ótima ajuda.&lt;/p&gt;
&lt;h3&gt;Observação:&lt;/h3&gt;
&lt;p&gt;Se existe alguma coisa que você ache errado ou que faz diferente, cria
um comentario para discutimos.&lt;/p&gt;
&lt;p&gt;Esse foi o meu segundo post.&lt;/p&gt;</summary><category term="frameworks"></category><category term="rails"></category><category term="sinatra"></category><category term="flask"></category><category term="django"></category></entry><entry><title>First</title><link href="/first-post.html" rel="alternate"></link><updated>2014-09-26T00:26:00-03:00</updated><author><name>Mário Idival</name></author><id>tag:,2014-09-26:first-post.html</id><summary type="html">&lt;h1&gt;Primeiramente, Bem vindo!&lt;/h1&gt;
&lt;p&gt;:)&lt;/p&gt;
&lt;h1&gt;Segundamente Quem sou eu (parcialmente)&lt;/h1&gt;
&lt;p&gt;Bom, me chamo Mário Idival, tenho 22 anos e sou Programador/Desenvolvedor Web usando
Python. Faço TADS (Tecnólogo em Análise e Desenvolvimento de Sistemas)
no IFRN, acabei de entrar no segundo período do curso mas ja estudo
programação a uns 3 anos. Comecei em Junho de 2011, quando semanas
antes, surgiu a idéia de ser Hacker. Lendo em algum blog da vida, li
que para ser Hacker, era necessário alguns conhecimentos e um deles era
saber programar.
Então fui atras, li sobre C, Java, Lisp, Lua, Cobol e
acabei escolhendo C para começar. Logo encontrei um livro de Luís Damas
e comecei a estudar. Na época, não tinha um computador e então eu fazia
os exemplos do livro no papel, mesmo não entendendo bem o que estava
fazendo.
Toda tarde durante uns 3 meses (onde eu consegui comprar o meu
primeiro computador) eu ia até uma lan house perto de minha casa,
baixava o DevC++, escrevia e compilava tudo que eu tinha no papel.
Depois eu vi que não estava conseguindo fazer muita coisa com C, fui
atras de outra linguagem. Peguei LUA e também não passei muito tempo com
ela.
Vi que precisava de ajuda, por que não conseguia prosseguir mais com as
linguagens que eu conhecia (C/LUA). Então eu achei um curso aqui na
minha cidade, onde consegui aproveitar os professores para conhecer mais
sobre outras areas de desenvolvimento (WEB, Desktop, Mobile) e decidi
ficar com Web.
No curso que escolhi, tinham 3 linguagens para ser estudada, PHP, Ruby e
Python. Como eu me achava atrasado na epóca, quando eu recebi os livros
do curso, eu ja me adiantava para estudar a proxima linguagem. E assim
foi, no modulo de PHP eu ja estava estudando Ruby, no modulo de Ruby
estava estudando Python (onde hoje é a minha linguagem principal).&lt;/p&gt;
&lt;h1&gt;Terceiramente, Motivo desse blog&lt;/h1&gt;
&lt;p&gt;Na época do curso, um dos meus professores &lt;a href="http://garulab.com"&gt;Bruno
Henrique&lt;/a&gt; estava reativando o blog dele e me falou
da importancia de ter um.
Não me lembro em detalhes do que foi falado naquele dia, mas durante
esse tempo, vi que é legal você escrever um blog. Pode ser que você tenha
bastante acesso, que os leitores possam discurtir assuntos que você tem
"domina", algum deles podem até ensinar e outros aprender.
Escrever em um blog, todo mundo sai ganhando, inclusive você.
Então eu comecei este, para mostrar esclarecer algumas coisas que eu
conheço, ensinar outras e acima de tudo aprender mais. Quero melhorar
minha escrita atraves dele, quero compartilhar conhecimento, o que eu
leio, o que eu quero ler. Também quero mostrar o que eu faço, na área de
programação, minhas práticas e ferramentas.&lt;/p&gt;
&lt;h1&gt;Quartamente, é isso.&lt;/h1&gt;
&lt;p&gt;Quero continar a escrever aqui e espero que eu consiga. Esse foi o meu
primeiro post.&lt;/p&gt;</summary><category term="first"></category><category term="marioidival"></category></entry></feed>